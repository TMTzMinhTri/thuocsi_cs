{"version":3,"sources":["Store/reducers sync nonrecursive //.reducer/.ts$","Store/reducers/layout.reducer.ts","Store/reducers/notification.reducer.ts","Store/reducers/task_manager.reducer.ts","Components/PrivateRoute/index.tsx","App.tsx","serviceWorker.ts","index.tsx","Interface/Store/layout.types.ts","Interface/Store/notification.types.ts","Store/index.ts","Interface/Store/task_manager.types.ts","Components/Loading/index.tsx","Api/index.tsx","Components/ReactstrapFormik/BaseInput.tsx","Components/ReactstrapFormik/RadioInput.tsx","Components/PaginationBar/index.tsx","Components/Avata/index.tsx","Components/TimeAgo/index.tsx","Components/Can/index.tsx","Utils/index.ts","Utils/defaultvalue.ts","Store/actions/layout.actions.ts","Api/Auth/index.ts","stylesheets/svg/logo_thuocsi.svg"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","initialState","user","isAuthenticated","loading","state","action","type","SIGN_IN_SUCCESS","GET_CURRENT_USER_SUCCESS","payload","SIGN_OUT","localStorage","clear","alert","SHOW_ALERT_ERROR","content","REMOVE_ALERT_ERROR","cs_tasks","total_count","user_detail","task_selected","userInput","page","per_page","failure_type_ids","from","to","user_id","so_id","status","LOADING_TABLE","GET_LIST_TASK_SUCCESS","UPDATE_USER_INPUT","CREATE_COMMENT","TASK_SELECTED","PrivateRoute","Component","component","rest","render","location","style","width","height","Loading","pathname","AdminLayout","React","lazy","LoginScreen","App","connect","layoutState","layout","notification","dispatch","bindActionCreators","getUser","getCurrentUser","useEffect","Suspense","fallback","path","exact","Boolean","window","hostname","match","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","requireReducers","require","reducers","forEach","filename","moduleName","replace","default","rootReducer","combineReducers","composeEnhancers","compose","middleware","thunk","createStore","applyMiddleware","className","src","Logo","alt","color","Api","pathApi","process","httpRequest","method","url","body","this","userStorage","getItem","JSON","parse","Promise","NProgress","isStarted","start","fetch","stringify","headers","phone","token","rsp","json","res","name","origin","title","onConfirm","assign","finally","done","get","post","delete","BaseInput","fields","field","form","touched","errors","props","FormGroup","label","Label","for","labelClassName","Input","invalid","autoComplete","FormFeedback","RadioInput","setFieldValue","isSubmitting","values","disabled","check","inline","checked","value","onChange","PREVIOUS_PAGE","range","step","i","push","PaginationBar","currentPage","setCurrentPage","totalRecords","perpage","pageRangeDisplayed","size","current","onChangePage","perpageOptions","totalPages","Math","ceil","gotoPage","setPage","event","preventDefault","pages","totalItems","startPage","max","endPage","min","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","getPager","Pagination","listClassName","PaginationItem","PaginationLink","first","onClick","index","key","previous","next","active","last","log","target","bsSize","item","Avata","memo","classNames","backgroundColor","Utils","stringToHslColor","lineHeight","fontSize","arrayNames","words","charAt","generateName","UncontrolledTooltip","placement","TimeAgo","datetime","live","locale","opts","domref","ref","node","cancel","setAttribute","input","Date","getTime","renderTimeAgo","format","toDateString","CanComponent","role","children","split","permissions","rules","isEmpty","includes","Can","withRouter","StatusTask","listTaskStatus","listAssignGroup","query","queryParams","params","hash","charCodeAt","current_date","date","getDate","getMonth","getFullYear","getHours","getMinutes","money","toString","URLSearchParams","useLocation","search","setItem","data","authentication_token","phone_number","signIn","getState","signOut"],"mappings":"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","file":"static/js/main.ba3a1175.chunk.js","sourcesContent":["var map = {\n\t\"./layout.reducer.ts\": 114,\n\t\"./notification.reducer.ts\": 115,\n\t\"./task_manager.reducer.ts\": 116\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 113;","import {\n  LayoutActionTypes,\n  ILayoutReducer,\n  GET_CURRENT_USER_SUCCESS,\n  SIGN_IN_SUCCESS,\n  SIGN_OUT,\n} from 'Interface/Store/layout.types';\n\nconst initialState: ILayoutReducer = {\n  user: null,\n  isAuthenticated: false,\n  loading: true,\n};\n\nexport default function (state = initialState, action: LayoutActionTypes): ILayoutReducer {\n  switch (action.type) {\n    case SIGN_IN_SUCCESS:\n    case GET_CURRENT_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case SIGN_OUT:\n      localStorage.clear();\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  NotificationActionTypes,\n  INotificationReducer,\n  REMOVE_ALERT_ERROR,\n  SHOW_ALERT_ERROR,\n} from 'Interface/Store/notification.types';\n\nconst initialState: INotificationReducer = {\n  alert: null,\n};\n\nexport default function (\n  state = initialState,\n  action: NotificationActionTypes\n): INotificationReducer {\n  switch (action.type) {\n    case SHOW_ALERT_ERROR:\n      return {\n        ...state,\n        alert: action.content,\n      };\n    case REMOVE_ALERT_ERROR:\n      return {\n        ...state,\n        alert: null,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ITask_managerReducer,\n  GET_LIST_TASK_SUCCESS,\n  UPDATE_USER_INPUT,\n  LOADING_TABLE,\n  CREATE_COMMENT,\n  TASK_SELECTED,\n} from 'Interface/Store/task_manager.types';\nimport { RootAction } from 'Interface/Store/index.types';\n\nconst initialState: ITask_managerReducer = {\n  cs_tasks: [],\n  total_count: 0,\n  user_detail: null,\n  loading: true,\n  task_selected: null,\n  userInput: {\n    page: 1,\n    per_page: 30,\n    failure_type_ids: [],\n    from: '2020-02-01',\n    to: '2020-08-31',\n    user_id: null,\n    so_id: null,\n    status: null,\n  },\n};\n\nexport default function (state = initialState, action: RootAction): ITask_managerReducer {\n  switch (action.type) {\n    case LOADING_TABLE:\n      return { ...state, loading: true };\n    case GET_LIST_TASK_SUCCESS:\n      return {\n        ...state,\n        cs_tasks: action.payload.cs_tasks,\n        total_count: action.payload.total_count,\n        user_detail: action.payload.user_detail,\n        loading: false,\n      };\n    case UPDATE_USER_INPUT:\n      return {\n        ...state,\n        userInput: action.payload,\n      };\n    case CREATE_COMMENT:\n      return {\n        ...state,\n        task_selected: action.task_selected,\n        cs_tasks: action.cs_tasks,\n      };\n    case TASK_SELECTED:\n      return {\n        ...state,\n        task_selected: action.payload,\n      };\n    default:\n      return { ...state };\n  }\n}\n","import * as React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Loading } from \"../Loading\";\n\ninterface IPrivateRoute {\n    component: React.SFC,\n    path: string,\n    loading: boolean,\n    isAuthenticated: boolean,\n}\n\nexport const PrivateRoute: React.FC<IPrivateRoute> = ({ component: Component, loading, ...rest }) => {\n    return <Route {...rest}\n        render={({ location }) => loading\n            ? <div style={{ width: \"100vw\", height: \"100vh\" }}><Loading /></div>\n            : rest.isAuthenticated\n                ? < Component {...rest} />\n                : <Redirect to={{\n                    pathname: \"/login\",\n                    state: { from: location }\n                }} />\n        }\n    />\n}\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect, } from \"react-router-dom\";\nimport { Loading } from \"Components\";\nimport { PrivateRoute } from 'Components/PrivateRoute';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { RootState } from 'Store';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getCurrentUser } from 'Store/actions/layout.actions';\nimport { RootAction } from 'Interface/Store/index.types';\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nconst AdminLayout = React.lazy(() => import('Layout/AdminLayout/index'))\nconst LoginScreen = React.lazy(() => import('Screens/LoginScreen'))\n\nconst mapState = (state: RootState) => ({\n  layoutState: state.layout,\n  notification: state.notification\n\n})\nconst mapAction = (dispatch: Dispatch<RootAction>) => bindActionCreators({\n  getUser: getCurrentUser\n}, dispatch)\n\ntype IProps = ReturnType<typeof mapState> & ReturnType<typeof mapAction>\n\nconst AppComponent: React.FC<IProps> = ({ layoutState, getUser, notification }) => {\n  React.useEffect(() => {\n    getUser()\n  }, [getUser])\n\n  return <Router>\n    <React.Suspense fallback={<div style={{ width: \"100vw\", height: \"100vh\" }}><Loading /></div>}>\n      <ToastContainer />\n      <Switch>\n        <Route path=\"/\" exact render={() => <Redirect to=\"/admin\" />} />\n        <PrivateRoute path=\"/admin\"\n          component={AdminLayout}\n          loading={layoutState.loading}\n          isAuthenticated={layoutState.isAuthenticated} />\n        <Route path=\"/login\" exact component={LoginScreen} />\n      </Switch>\n      {notification.alert && <SweetAlert {...notification.alert}>{notification.alert.content}</SweetAlert>}\n    </React.Suspense>\n  </Router>\n}\n\n\n\nexport const App = connect(mapState, mapAction)(AppComponent)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './App.scss'\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { App } from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport { store } from 'Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { IResponseUser } from 'Interface/Response/session.types';\n\n// DEFINE TYPES\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_IN_ERROR = 'SIGN_IN_ERROR';\n\nexport const SIGN_OUT = 'SIGN_OUT';\n\nexport const GET_CURRENT_USER_SUCCESS = 'GET_CURRENT_USER_SUCCESS';\n//\n\n//DEFINE ACTION\nexport interface ISignInSuccessAction {\n  type: typeof SIGN_IN_SUCCESS;\n  payload: IResponseUser;\n}\n\nexport interface ISignOutAction {\n  type: 'SIGN_OUT';\n}\n\nexport interface IGetCurrentUserAction {\n  type: 'GET_CURRENT_USER_SUCCESS';\n  payload: IResponseUser;\n}\n\n//\n\n// DEFINE REDUCER\nexport interface ILayoutReducer {\n  user: IResponseUser | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n}\n\n//\n\nexport type LayoutActionTypes = ISignInSuccessAction | ISignOutAction | IGetCurrentUserAction;\n","import { SweetAlertProps } from 'react-bootstrap-sweetalert/dist/types';\n\nexport const SHOW_ALERT_ERROR = 'SHOW_ALERT_ERROR';\nexport const REMOVE_ALERT_ERROR = 'REMOVE_ALERT_ERROR';\n\ninterface IAlertProps extends SweetAlertProps {\n  content: string;\n}\n\nexport interface IShowAlertErrorAction {\n  type: typeof SHOW_ALERT_ERROR;\n  content: IAlertProps;\n}\nexport interface IRemoveAlertErrorAction {\n  type: typeof REMOVE_ALERT_ERROR;\n}\n\nexport interface INotificationReducer {\n  alert: IAlertProps | null;\n}\n\nexport type NotificationActionTypes =\n  | IShowAlertErrorAction\n  | IRemoveAlertErrorAction","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\nimport { RootAction } from 'Interface/Store/index.types';\nimport { ILayoutReducer } from 'Interface/Store/layout.types';\nimport { ITask_managerReducer } from 'Interface/Store/task_manager.types';\nimport { INotificationReducer } from 'Interface/Store/notification.types';\n\ninterface IRootReducers {\n  layout: ILayoutReducer;\n  task_manager: ITask_managerReducer;\n  notification: INotificationReducer;\n}\n\nconst requireReducers = require.context('./reducers', false, /\\.reducer\\.ts$/);\nconst reducers: any = {};\n\nrequireReducers.keys().forEach((filename) => {\n  const moduleName: string = filename.replace(/(\\.\\/|\\.reducer\\.ts)/g, '');\n  reducers[moduleName] = requireReducers(filename).default;\n});\n\nconst rootReducer = combineReducers<IRootReducers>(reducers);\n\nconst composeEnhancers =\n  process.env.NODE_ENV === 'production'\n    ? compose\n    : (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst middleware = [thunk as ThunkMiddleware<RootState, RootAction>];\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const store = createStore(rootReducer, {}, composeEnhancers(applyMiddleware(...middleware)));\n","import { IResponeListTasks, IUserDetail, Icstasks } from 'Interface/Response/task_manager.types';\n\nexport const GET_LIST_TASK_SUCCESS = 'GET_LIST_TASK_SUCCESS';\nexport const GET_LIST_TASK_By_FILTER_SUCCESS = 'GET_LIST_TASK_By_FILTER_SUCCESS';\nexport const UPDATE_USER_INPUT = 'UPDATE_USER_INPUT';\nexport const LOADING_TABLE = 'LOADING_TABLE';\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\nexport const TASK_SELECTED = 'TASK_SELECTED';\n\n//DEFINE ACTION\n\nexport interface IGetListTaskAction {\n  type: typeof GET_LIST_TASK_SUCCESS;\n  payload: IResponeListTasks;\n}\n\nexport interface IGetListTaskByFilterAction {\n  type: typeof GET_LIST_TASK_By_FILTER_SUCCESS;\n  payload: IResponeListTasks;\n}\nexport interface IUpdateUserInputAction {\n  type: typeof UPDATE_USER_INPUT;\n  payload: IUserInput;\n}\nexport interface ILoadingTableAction {\n  type: typeof LOADING_TABLE;\n}\n\nexport interface ICreateCommentAction {\n  type: typeof CREATE_COMMENT;\n  task_selected: Icstasks | null;\n  cs_tasks: Icstasks[];\n}\n\nexport interface ISelectedTaskAction {\n  type: typeof TASK_SELECTED;\n  payload: Icstasks | null;\n}\n//\n\n// DEFINE REDUCER\nexport interface ITask_managerReducer {\n  total_count: number;\n  user_detail: IUserDetail | null;\n  cs_tasks: Icstasks[];\n  loading: boolean;\n  userInput: IUserInput;\n  task_selected: Icstasks | null;\n}\n\n//\nexport interface IUserInput {\n  page: number;\n  per_page: number;\n  from: string;\n  to: string;\n  failure_type_ids: string[];\n  user_id: number | null;\n  so_id: number | null;\n  status: string | null;\n}\n\n//\nexport type TaskManagerActionTypes =\n  | IGetListTaskAction\n  | IGetListTaskByFilterAction\n  | IUpdateUserInputAction\n  | ILoadingTableAction\n  | ICreateCommentAction\n  | ISelectedTaskAction;\n","import * as React from 'react'\nimport { Spinner } from 'reactstrap';\nimport Logo from \"stylesheets/svg/logo_thuocsi.svg\";\n\nexport const Loading: React.SFC<{}> = () => {\n    return <div className=\"loading-component\">\n        <img src={Logo} alt=\"logo\" />\n        <Spinner color=\"primary\" />\n    </div>\n}","import { store } from \"Store\"\nimport { RootAction } from \"Interface/Store/index.types\"\nimport NProgress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\nimport { SIGN_OUT } from \"Interface/Store/layout.types\";\nimport { SHOW_ALERT_ERROR, REMOVE_ALERT_ERROR } from \"Interface/Store/notification.types\"\ninterface IResponse<T> extends IResponseResult {\n    data: T\n}\ninterface IResponseResult {\n    code: string\n    status: number,\n    message: string\n}\nexport const Api = {\n    pathApi: process.env.REACT_APP_BASEURL || \"https://api.stg.thuocsi.vn\",\n\n    httpRequest<T>(method: string, url: string, body?: Object): Promise<IResponse<T>> {\n        const path = `${this.pathApi}${url}`\n        const userStorage = localStorage.getItem('user')\n        const user = userStorage ? JSON.parse(userStorage) : null\n        return new Promise((resolve) => {\n            if (!NProgress.isStarted()) NProgress.start();\n            fetch(path, {\n                method,\n                body: body ? JSON.stringify(body) : null,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"X-USER-PHONE\": user ? user.phone : user,\n                    \"X-USER-TOKEN\": user ? user.token : user\n                }\n            })\n                .then(rsp => rsp.json() as Promise<IResponse<T>>)\n                .then(res => {\n                    if (res.status === 401) {\n                        const errorMessage = { name: res.code, message: res.message }\n                        throw errorMessage\n                    }\n                    resolve(res)\n                })\n                .catch(e => {\n                    const path = `${window.location.origin}${window.location.pathname}#/login `\n                    store.dispatch<RootAction>({\n                        type: SHOW_ALERT_ERROR,\n                        content: {\n                            content: e.message,\n                            title: e.name,\n                            type: \"error\",\n                            onConfirm: () => {\n                                store.dispatch<RootAction>({ type: REMOVE_ALERT_ERROR })\n                                store.dispatch<RootAction>({ type: SIGN_OUT })\n                                window.location.assign(path)\n                            }\n                        }\n                    })\n                })\n                .finally(() => {\n                    NProgress.done()\n                })\n        })\n    },\n    get<T>(url: string): Promise<IResponse<T>> {\n        return this.httpRequest(\"GET\", url)\n    },\n    post<T>(url: string, body: Object): Promise<IResponse<T>> {\n        return this.httpRequest(\"POST\", url, body)\n    },\n    delete<T>(url: string): Promise<IResponse<T>> {\n        return this.httpRequest(\"DELETE\", url)\n    }\n}","import * as React from \"react\";\nimport { FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\nimport { FieldProps } from \"formik\";\n\ninterface IProps extends FieldProps {\n    id: string,\n    label: string,\n    labelClassName?: string\n}\n\nexport const BaseInput: React.FC<IProps> = ({ field: { ...fields }, form: { touched, errors, ...rest }, ...props }) => (\n    <FormGroup>\n        {props.label && <Label for={props.id} className={props.labelClassName}>{props.label}</Label>}\n        <Input {...props} {...fields} invalid={Boolean(touched[fields.name] && errors[fields.name])} autoComplete=\"off\"/>\n        {touched[fields.name] && errors[fields.name] ? <FormFeedback>{errors[fields.name]}</FormFeedback> : ''}\n    </FormGroup>\n);","import * as React from \"react\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\nimport { FieldProps } from \"formik\";\n\ninterface IProps extends FieldProps {\n    disabled: boolean,\n    id: string,\n    label: string\n\n}\nexport const RadioInput: React.FC<IProps> = ({\n    field,\n    form: { isSubmitting, setFieldValue, touched, errors, values },\n    disabled = false,\n    ...props\n}) => (\n        <FormGroup check inline>\n            <Label for={props.id}>\n                <Input {...props}\n                    type=\"radio\"\n                    name={field.name}\n                    checked={values[field.name] === field.value}\n                    value={field.value}\n                    onChange={() => setFieldValue(field.name, field.value)} />{props.label}\n            </Label>\n        </FormGroup>\n    )","import * as React from \"react\";\nimport { Pagination, PaginationItem, PaginationLink, Input } from 'reactstrap';\n\nconst PREVIOUS_PAGE = 'PREV';\nconst NEXT_PAGE = 'NEXT';\n\nconst range = (from: number, to: number, step = 1) => {\n    let i = from;\n    const range = [];\n\n    while (i <= to) {\n        range.push(i);\n        i += step;\n    }\n\n    return range;\n}\n\ninterface IPaginationBarProps {\n    totalRecords: number,\n    perpage: number,\n    pageRangeDisplayed?: number,\n    onChangePage: Function,\n    size?: \"sm\" | \"lg\",\n    current: number,\n    perpageOptions?: number[]\n}\n\nexport const PaginationBar: React.FC<IPaginationBarProps> = React.memo((props) => {\n    const [currentPage, setCurrentPage] = React.useState<number>(1);\n    // const [perPageCurrent, setPerpageCurrent] = React.useState<number>(0)\n    const { totalRecords = 0, perpage = 30, pageRangeDisplayed = 2, size = \"normal\", current, onChangePage, perpageOptions } = props;\n    const totalPages = Math.ceil(totalRecords / perpage);\n\n    const gotoPage = React.useCallback(page => {\n        setCurrentPage(page)\n        // setPerpageCurrent(perpage)\n        onChangePage(page)\n    }, [onChangePage])\n\n    React.useEffect(() => {\n        if (current === currentPage) return\n        gotoPage(current);\n    }, [gotoPage, current, currentPage]);\n\n\n    const getPager = () => {\n\n        const totalItems = (pageRangeDisplayed * 2) + 3;\n        const totalBlocks = totalItems + 2;\n\n        if (totalPages > totalBlocks) {\n\n            const startPage = Math.max(2, currentPage - pageRangeDisplayed);\n            const endPage = Math.min(totalPages - 1, currentPage + pageRangeDisplayed);\n\n            let pages = range(startPage, endPage) as any;\n\n            const hasLeftSpill = startPage > 2;\n            const hasRightSpill = (totalPages - endPage) > 1;\n            const spillOffset = totalItems - (pages.length + 1);\n\n            switch (true) {\n                case (hasLeftSpill && !hasRightSpill): {\n                    const extraPages = range(startPage - spillOffset, startPage - 1);\n                    pages = [PREVIOUS_PAGE, ...extraPages, ...pages];\n                    break;\n                }\n\n                case (!hasLeftSpill && hasRightSpill): {\n                    const extraPages = range(endPage + 1, endPage + spillOffset);\n                    pages = [...pages, ...extraPages, NEXT_PAGE];\n                    break;\n                }\n\n                case (hasLeftSpill && hasRightSpill):\n                default: {\n                    pages = [PREVIOUS_PAGE, ...pages, NEXT_PAGE];\n                    break;\n                }\n            }\n\n            return [1, ...pages, totalPages];\n\n        }\n\n        return range(1, totalPages);\n\n    }\n    const setPage = (page: number) => (event: React.MouseEvent) => {\n        event.preventDefault();\n        if (page === currentPage) return\n        gotoPage(page);\n    }\n    const pages = getPager();\n\n    return !totalRecords || totalPages === 1\n        ? null\n        : <div className=\"d-flex align-items-center mt-3\">\n            <Pagination size={size} listClassName=\"m-0\">\n                <PaginationItem disabled={currentPage === 1} >\n                    <PaginationLink first onClick={setPage(1)} />\n                </PaginationItem>\n                {pages.map((page, index) => {\n                    if (page === PREVIOUS_PAGE) {\n                        return <PaginationItem key={index}>\n                            <PaginationLink previous onClick={setPage(currentPage - 1)} />\n                        </PaginationItem>\n                    }\n                    if (page === NEXT_PAGE) {\n                        return <PaginationItem key={index}>\n                            <PaginationLink next onClick={setPage(currentPage + 1)} />\n                        </PaginationItem>\n                    }\n                    return <PaginationItem key={index} active={page === currentPage}>\n                        <PaginationLink onClick={setPage(page)} >{page}</PaginationLink>\n                    </PaginationItem>\n                })}\n                <PaginationItem disabled={currentPage === totalPages}>\n                    <PaginationLink last onClick={setPage(totalPages)} />\n                </PaginationItem>\n\n            </Pagination >\n            {perpageOptions && <Input\n                type=\"select\"\n                className=\"w-auto ml-2\"\n                onChange={(e) => console.log(e.target.value)}\n                name=\"select\"\n                bsSize={\"sm\"}>\n                {perpageOptions.map((item, index) => <option key={`perpage_item_${index}`} value={item}> {item} / trang </option>)}\n            </Input>\n            }\n            <b className=\"ml-2\">{totalRecords} task</b>\n        </div >\n})","import React from \"react\";\nimport { UncontrolledTooltip } from \"reactstrap\";\nimport Utils from \"Utils\";\nimport { words } from \"lodash\";\n\n\ninterface IAvataProps {\n    name: string,\n    target: string,\n    classNames?: string\n}\n\nexport const Avata: React.FC<IAvataProps> = React.memo(({ name, target, classNames }) => {\n    function generateName(name: string) {\n        let shortname: string = \"\";\n        if (!name) {\n            return shortname = \"KH\"\n        }\n        let arrayNames = words(name)\n        if (arrayNames.length > 2) {\n            shortname = arrayNames[arrayNames.length - 2].charAt(0) + arrayNames[arrayNames.length - 1].charAt(0)\n        }\n        else {\n            shortname = arrayNames[0].charAt(0) + arrayNames[1].charAt(0)\n        }\n        return shortname\n    }\n    return <div className={classNames}>\n        <div style={{ backgroundColor: Utils.stringToHslColor(name), height: \"30px\", width: \"30px\", lineHeight: \"30px\", fontSize: \"12px\" }}\n            className=\"rounded-circle text-center cursor-pointer\" id={target}>\n            {generateName(name)}\n        </div>\n        <UncontrolledTooltip placement=\"top\" target={target}>\n            {name ? name : \"Khách hàng\"}\n        </UncontrolledTooltip>\n    </div>\n})","import * as React from 'react'\nimport { format, cancel, render } from 'timeago.js';\nimport { Opts, TDate } from 'timeago.js/lib/interface';\n\n\ninterface ITimeAgoProps {\n    live?: boolean,\n    opts?: Opts,\n    locale?: string,\n    datetime: TDate\n}\n\nconst toDateTime = (input: TDate): string => {\n    return '' + (input instanceof Date ? input.getTime() : input);\n}\n\nexport const TimeAgo: React.FC<ITimeAgoProps> = React.memo(({ datetime, live = true, locale, opts }) => {\n    const domref = React.useRef<HTMLTimeElement>(null)\n\n    React.useEffect(() => {\n        const ref = domref.current\n        if (null !== ref) renderTimeAgo()\n        return () => {\n            if (null !== ref) cancel(ref && ref)\n        }\n    })\n    function renderTimeAgo() {\n        const node = domref.current\n        if (null !== node) {\n            cancel(node)\n            if (live) {\n                node.setAttribute(\"datetime\", toDateTime(datetime))\n                render(node, locale, opts)\n            }\n        }\n    }\n    return <time ref={domref} style={{ fontSize: \"12px\" }}>{format(new Date(datetime).toDateString(), locale, opts)}</time>\n})","import * as React from 'react'\nimport rules from \"./rules.json\";\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { last, isEmpty, includes } from \"lodash\";\n\ninterface ICanProps extends RouteComponentProps {\n    role: string | undefined\n    action?: any,\n}\ntype PostalCode = keyof typeof rules\n\nexport const CanComponent: React.FC<ICanProps> = React.memo(({ role = \"member\", children, action, location }) => {\n    const currentPage = React.useMemo(() => last(location.pathname.split('/')), [location]) as any\n    const check = (): Boolean => {\n        if (role) {\n            const permissions = rules[role as PostalCode] as any;\n            if (!isEmpty(permissions[currentPage]) && includes(permissions[currentPage], action)) {\n                return true\n            }\n            return false\n        }\n        return false\n    }\n\n    return <React.Fragment>\n        {check() ? children : null}\n    </React.Fragment>\n})\nexport const Can = withRouter(CanComponent)","import { useLocation } from 'react-router-dom';\nimport * as DefaultValue from './defaultvalue';\nexport { DefaultValue };\n\nexport enum StatusTask {\n  pending = 'pending',\n  assigned = 'assigned',\n  in_progress = 'in_progress',\n  done = 'done',\n  canceled = 'canceled',\n}\n\nclass Utils {\n  public getQueryparams(keys: string[]) {\n    const query = this.queryParams();\n    let params = {} as any;\n    keys.forEach((key) => {\n      return (params[key] = query.get(key));\n    });\n    return params;\n  }\n\n  public stringToHslColor(name: string) {\n    let hash = 0;\n    for (let i = 0; i < name.length; i++) {\n      hash = name.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let h = hash % 360;\n    return 'hsl(' + h + ', ' + 80 + '%, ' + 80 + '%)';\n  }\n  public FormatDateBy_YYYY_MM_DD(current_date: Date | undefined): string {\n    const date = new Date(current_date ? current_date : '');\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  }\n\n  public converTime(current_date: Date | undefined) {\n    const date = new Date(current_date ? current_date : '');\n    return `${date.getHours()}:${date.getMinutes()}`;\n  }\n  public formatCurrency(money: number): string {\n    return money.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + ' ₫';\n  }\n  private queryParams() {\n    return new URLSearchParams(useLocation().search);\n  }\n}\n\nexport default new Utils();\n","export const listTaskStatus = [\n  { key: 'pending', name: 'Chưa xử lý' },\n  { key: 'assigned', name: 'Đã tiếp nhận' },\n  { key: 'in_progress', name: 'Đang xử lý' },\n  { key: 'done', name: 'Đã xử lý' },\n  { key: 'canceled', name: 'Đã hủy' },\n];\n\nexport const listAssignGroup = [\n  { key: 'not_set_group', name: 'Chưa chỉ định' },\n  { key: 'member_group', name: 'CS' },\n  { key: 'admin_group', name: 'Admin' },\n  { key: 'finance_group', name: 'Kế toán' },\n  { key: 'inventory_group', name: 'Kho' },\n  { key: 'tech_group', name: 'IT' },\n];\n","import { Dispatch } from 'redux';\nimport { RootAction } from 'Interface/Store/index.types';\nimport { get_current_user, sign_in, sign_out } from 'Api/Auth';\nimport { GET_CURRENT_USER_SUCCESS, SIGN_IN_SUCCESS, SIGN_OUT } from 'Interface/Store/layout.types';\nimport { RootState } from 'Store';\nimport { REMOVE_ALERT_ERROR } from 'Interface/Store/notification.types';\n\nconst getCurrentUser = () => (dispatch: Dispatch<RootAction>) => {\n  get_current_user().then((rsp) => {\n    localStorage.setItem(\n      'user',\n      JSON.stringify({ token: rsp.data.authentication_token, phone: rsp.data.phone_number })\n    );\n    dispatch({ type: GET_CURRENT_USER_SUCCESS, payload: rsp.data });\n  });\n};\n\nconst signIn = (data: { login: string; password: string }) => (\n  dispatch: Dispatch<RootAction>,\n  getState: () => RootState\n) => {\n  const {\n    notification: { alert },\n  } = getState();\n  return new Promise((resolve) => {\n    sign_in(data).then((rsp) => {\n      if (rsp.code === 'OK') {\n        localStorage.setItem(\n          'user',\n          JSON.stringify({ token: rsp.data.authentication_token, phone: rsp.data.phone_number })\n        );\n        alert && dispatch({ type: REMOVE_ALERT_ERROR });\n        dispatch({ type: SIGN_IN_SUCCESS, payload: rsp.data });\n        resolve();\n      } else {\n        resolve(rsp.message);\n      }\n    });\n  });\n};\n\nconst signOut = () => (dispatch: Dispatch<RootAction>) => {\n  sign_out().then((rsp) => {\n    if (rsp.code === 'OK') {\n      dispatch({ type: SIGN_OUT });\n    }\n  });\n};\n\nexport { getCurrentUser, signIn, signOut };\n","import { Api } from '..';\nimport { IResponseUser } from 'Interface/Response/session.types';\n\nexport const get_current_user = () => {\n  return Api.get<IResponseUser>('/api/cs/v1/current_cs_account');\n};\n\nexport const sign_in = (body: { login: string; password: string }) => {\n  const path = '/api/cs/v1/cs_members/sign_in';\n  return Api.post<IResponseUser>(path, body);\n};\n\nexport const sign_out = () => {\n  const path = '/api/cs/v1/cs_members/sign_out';\n  return Api.delete<null>(path);\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo_thuocsi.96e06b43.svg\";"],"sourceRoot":""}